loader.exec = file:bin/bench_hashjoin_st
loader.insecure__use_cmdline_argv = 1
sgx.enable_stats = 1

loader.preload = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libsysdb.so
loader.debug_type = none

# Environment variables for Python
loader.env.LD_LIBRARY_PATH = /lib:/lib/x86_64-linux-gnu:/usr/lib:/usr/lib/x86_64-linux-gnu
loader.env.PATH = /usr/bin:/bin


# Mounted FSes. The following "chroot" FSes mount a part of the host FS into the
# guest. Other parts of the host FS will not be available in the guest.

# Default glibc files, mounted from the Runtime directory in GRAPHENEDIR.

# Host-level libraries (e.g., /lib/x86_64-linux-gnu) required by the Python executable
fs.mount.lib2.type = chroot
fs.mount.lib2.path = /lib/x86_64-linux-gnu
fs.mount.lib2.uri = file:/lib/x86_64-linux-gnu



# Host-level directory (/usr) required by the Python executable
fs.mount.usr.type = chroot
fs.mount.usr.path = /usr
fs.mount.usr.uri = file:/usr

sgx.allowed_files.six = file:/usr

# Mount /tmp
fs.mount.tmp.type = chroot
fs.mount.tmp.path = /tmp
fs.mount.tmp.uri = file:/tmp

# Mount /etc
fs.mount.etc.type = chroot
fs.mount.etc.path = /etc
fs.mount.etc.uri = file:/etc


# Default glibc files, mounted from the Runtime directory in GRAPHENEDIR.
fs.mount.lib.type = chroot
fs.mount.lib.path = /lib
fs.mount.lib.uri = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime

sgx.enclave_size = 4G
sgx.thread_num = 20

# SGX trusted libraries

# Glibc libraries
sgx.trusted_files.ld = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/ld-linux-x86-64.so.2
sgx.trusted_files.libc = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libc.so.6
sgx.trusted_files.libm = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libm.so.6
sgx.trusted_files.libdl = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libdl.so.2
sgx.trusted_files.librt = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/librt.so.1
sgx.trusted_files.libutil = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libutil.so.1
sgx.trusted_files.libpthread = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libpthread.so.0
sgx.trusted_files.libnssdns = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libnss_dns.so.2
sgx.trusted_files.libresolve = file:/home/sandeep/Desktop/work/phd/SecureFS/graphene/Runtime/libresolv.so.2

sgx.allowed_files.one = file:/tmp/ensureinsecurefs/test
sgx.allowed_files.two = file:/tmp/ensureinsecurefs/test_2
sgx.allowed_files.three =file:/tmp/securefs-hashjoin-bench.ready
sgx.allowed_files.four = file:/tmp/securefs-hashjoin-bench.done



# IOZONE related

fs.mount.wd.type = chroot
fs.mount.wd.path = //home/sandeep/Desktop/work/phd/SecureFS/securefs_bench/pte-hashjoin
fs.mount.wd.uri = file://home/sandeep/Desktop/work/phd/SecureFS/securefs_bench/pte-hashjoin
sgx.allowed_files.cwddir = file://home/sandeep/Desktop/work/phd/SecureFS/securefs_bench/pte-hashjoin


#SecureFS related

#loader.env.LD_PRELOAD = /usr/custlib/libSF_FAT_ENC_PERF.so
loader.env.LD_PRELOAD = /usr/custlib/libSF_FAT_ENC_HASH_PERF.so

fs.mount.custlib.type = chroot
fs.mount.custlib.path = /usr/custlib
fs.mount.custlib.uri = file:/home/sandeep/Desktop/work/phd/SecureFS/SecureFSHook/cmake-build-debug

fs.mount.diskpath.type = chroot
fs.mount.diskpath.path = /home/sandeep/Desktop/SecureFS_related/new_disks/testsgxlib.disk
fs.mount.diskpath.uri = file:/home/sandeep/Desktop/SecureFS_related/new_disks/testsgxlib.disk

sgx.allowed_files.libpath = file:/home/sandeep/Desktop/work/phd/SecureFS/SecureFSHook/cmake-build-debug
sgx.allowed_files.addfilepath = file:/home/sandeep/Desktop/tmp_securefs
sgx.allowed_files.diskpath = file:/home/sandeep/Desktop/SecureFS_related/new_disks/testsgxlib.disk

# Protected files. Either use this, or SecureFS. NEVER BOTH
#sgx.protected_files_key = ffeeddccbbaa99887766554433221100
#sgx.protected_files.input = file:/tmp/ensureinsecurefs/test
#sgx.protected_files.input2 = file:/tmp/ensureinsecurefs/test_2

# command
# perf stat pal_loader SGX catena.manifest.sgx